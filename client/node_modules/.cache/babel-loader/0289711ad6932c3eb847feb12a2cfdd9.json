{"ast":null,"code":"import _slicedToArray from \"/Users/flatironschool/Desktop/MOD5/Devipedia - master/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/flatironschool/Desktop/MOD5/Devipedia - master/client/src/Components/Dashboard/dashboard.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { getCurrentProfile, deleteAccount } from '../../Actions/Profile';\nimport axios from \"axios\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    githubusername\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  const _useState = useState({\n    imageURL: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\"http://localhost:3000/api/profile/github/users/\".concat(githubusername));\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), React.createElement(\"img\", {\n    src: data.avatar_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), profile.experience !== null ? React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), \" Delete My Account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"You have not yet setup a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/MOD5/Devipedia - master/client/src/Components/Dashboard/dashboard.js"],"names":["React","Fragment","useEffect","useState","Link","PropTypes","connect","DashboardActions","Experience","getCurrentProfile","deleteAccount","axios","Dashboard","auth","user","profile","githubusername","imageURL","data","setData","fetchData","result","name","avatar_url","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { getCurrentProfile, deleteAccount } from '../../Actions/Profile';\nimport axios from \"axios\"\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, githubusername }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  const [data, setData] = useState({imageURL : ''});\n\n  useEffect(() => {\n    const fetchData = async () => {\n  const result = await axios(`http://localhost:3000/api/profile/github/users/${githubusername}`,)\n  setData(result.data);\n}\nfetchData()\n  },[]);\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome {user && user.name}\n      </p>\n      <img src={data.avatar_url} />\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n\n        {profile.experience !== null ? <Experience experience={profile.experience} /> : <div>test</div>}\n\n\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCurrentProfile, deleteAccount }\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}