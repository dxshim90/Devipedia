{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Desktop/MOD5/Devipedia - master/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  posts: [],\n  post: null,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case \"GET_POSTS\":\n      return _objectSpread({}, state, {\n        posts: payload\n      });\n\n    case \"GET_POST\":\n      return _objectSpread({}, state, {\n        post: payload\n      });\n\n    case \"ADD_POST\":\n      return _objectSpread({}, state, {\n        posts: [payload, ...state.posts]\n      });\n\n    case \"DELETE_POST\":\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(post => post._id !== payload)\n      });\n\n    case \"POST_ERROR\":\n      return _objectSpread({}, state, {\n        error: payload\n      });\n\n    case \"UPDATE_LIKES\":\n      return _objectSpread({}, state, {\n        posts: state.posts.map(post => post._id === payload.id ? _objectSpread({}, post, {\n          likes: payload.likes\n        }) : post),\n        loading: false\n      });\n\n    case \"ADD_COMMENT\":\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: payload\n        }),\n        loading: false\n      });\n\n    case \"REMOVE_COMMENT\":\n      return _objectSpread({}, state, {\n        post: _objectSpread({}, state.post, {\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/flatironschool/Desktop/MOD5/Devipedia - master/client/src/Reducers/post.js"],"names":["initialState","posts","post","error","state","action","type","payload","filter","_id","map","id","likes","loading","comments","comment"],"mappings":";AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAAA,QAC5CC,IAD4C,GAC1BD,MAD0B,CAC5CC,IAD4C;AAAA,QACtCC,OADsC,GAC1BF,MAD0B,CACtCE,OADsC;;AAGpD,UAAQD,IAAR;AACE,SAAK,WAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,KAAK,EAAEM;AAFT;;AAIF,SAAK,UAAL;AACE,+BACKH,KADL;AAEEF,QAAAA,IAAI,EAAEK;AAFR;;AAIF,SAAK,UAAL;AACE,+BACKH,KADL;AAEEH,QAAAA,KAAK,EAAE,CAACM,OAAD,EAAU,GAAGH,KAAK,CAACH,KAAnB;AAFT;;AAIF,SAAK,aAAL;AACE,+BACKG,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACO,GAAL,KAAaF,OAAxC;AAFT;;AAIF,SAAK,YAAL;AACE,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEI;AAFT;;AAIA,SAAK,cAAL;AACA,+BACKH,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYS,GAAZ,CAAgBR,IAAI,IACzBA,IAAI,CAACO,GAAL,KAAaF,OAAO,CAACI,EAArB,qBAA+BT,IAA/B;AAAqCU,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAApD,aAA8DV,IADzD,CAFT;AAKEW,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAK,aAAL;AACE,+BACKT,KADL;AAEEF,QAAAA,IAAI,oBAAOE,KAAK,CAACF,IAAb;AAAmBY,UAAAA,QAAQ,EAAEP;AAA7B,UAFN;AAGEM,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAK,gBAAL;AACE,+BACKT,KADL;AAEEF,QAAAA,IAAI,oBACCE,KAAK,CAACF,IADP;AAEFY,UAAAA,QAAQ,EAAEV,KAAK,CAACF,IAAN,CAAWY,QAAX,CAAoBN,MAApB,CACRO,OAAO,IAAIA,OAAO,CAACN,GAAR,KAAgBF,OADnB;AAFR;AAFN;;AASE;AACF,aAAOH,KAAP;AAnDJ;AAqDD","sourcesContent":["\n\nconst initialState = {\n  posts: [],\n  post: null,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case \"GET_POSTS\":\n      return {\n        ...state,\n        posts: payload,\n      };\n    case \"GET_POST\":\n      return {\n        ...state,\n        post: payload,\n      };\n    case \"ADD_POST\":\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n      };\n    case \"DELETE_POST\":\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n      };\n    case \"POST_ERROR\":\n      return {\n        ...state,\n        error: payload,\n      };\n      case \"UPDATE_LIKES\":\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case \"ADD_COMMENT\":\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case \"REMOVE_COMMENT\":\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            comment => comment._id !== payload\n          )\n        }\n      }\n        default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}